version: "3.9"
name: media-stack
services:
  vpn:
    container_name: vpn
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    environment:
      - OPENVPN_USER=${OPENVPN_USER:-""}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD:-""}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-protonvpn} # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom
      - VPN_PORT_FORWARDING=on
      - VPN_PORT_FORWARDING_PROVIDER=protonvpn

      ## For list of server countries, visit https://raw.githubusercontent.com/qdm12/gluetun/master/internal/storage/servers.json
      - SERVER_COUNTRIES=${SERVER_COUNTRIES:-Netherlands}

    networks:
      - mynetwork

    ports:
      # qbittorrent ports
      - 5080:5080
      - 6881:6881
      - 6881:6881/udp
      # prowlarr ports
      - 9696:9696
      # sonarr ports
      - 7878:7878
      # radarr ports
      - 8989:8989
      # bazarr ports
      - 6767:6767
    restart: "unless-stopped"

  ## Default credentials of qBittorrent - Username: admin password: adminadmin ##
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:4.5.4

    depends_on:
      vpn:
        condition: service_healthy

    network_mode: service:vpn

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - WEBUI_PORT=5080
    volumes:
      - qbittorrent-config:/config
      - torrent-downloads:/downloads

    restart: "unless-stopped"

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:4.7.5
    depends_on:
      vpn:
        condition: service_healthy
      qbittorrent:
        condition: service_started
    network_mode: service:vpn

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - radarr-config:/config
      - torrent-downloads:/downloads
    restart: "unless-stopped"

  sonarr:
    image: linuxserver/sonarr:4.0.0-develop
    container_name: sonarr
    depends_on:
      vpn:
        condition: service_healthy
      qbittorrent:
        condition: service_started

    network_mode: service:vpn

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - sonarr-config:/config
      - torrent-downloads:/downloads
    restart: unless-stopped

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    network_mode: service:vpn

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - bazarr-config:/config
      - torrent-downloads:/downloads
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:1.8.6

    depends_on:
      vpn:
        condition: service_healthy
      qbittorrent:
        condition: service_started

    network_mode: service:vpn

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - prowlarr-config:/config

    restart: unless-stopped

  jellyfin:
    image: linuxserver/jellyfin:10.8.10
    container_name: jellyfin
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jellyfin-config:/config
      - torrent-downloads:/data
    # devices:
    #  - /dev/videoN:/dev/videoN # Mount GPU device
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped

  monitor:
    container_name: monitor
    build:
      context: monitor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    network_mode: service:vpn

    restart: unless-stopped

  # Doc: https://github.com/navilg/cleanmyarr
  # cleanmyarr:
  #   depends_on:
  #     - radarr
  #     - sonarr
  #   image: linuxshots/cleanmyarr:0.8.1
  #   container_name: cleanmyarr
  #   networks:
  #     - mynetwork
  #   volumes:
  #     - cleanmyarr-config:/config
  # restart: unless-stopped
  # environment:
  # - CMA_MAINTENANCE_CYCLE=${CMA_MAINTENANCE_CYCLE:-""}
  # - CMA_DELETE_AFTER_DAYS=${CMA_DELETE_AFTER_DAYS:-""}
  # - CMA_ENABLE_EMAIL_NOTIFICATION=${CMA_ENABLE_EMAIL_NOTIFICATION:-""}
  # - CMA_SMTP_USERNAME=${CMA_SMTP_USERNAME:-""}
  # - CMA_SMTP_ENCODED_PASSWORD=${CMA_SMTP_ENCODED_PASSWORD:-""}
  # - CMA_SMTP_TO_EMAILS=${CMA_SMTP_TO_EMAILS:-""}
  # - CMA_ENABLE_GOTIFY_NOTIFICATION=${CMA_ENABLE_GOTIFY_NOTIFICATION:-""}
  # - CMA_GOTIFY_URL=${CMA_GOTIFY_URL:-""}
  # - CMA_GOTIFY_ENCODED_APP_TOKEN=${CMA_GOTIFY_ENCODED_APP_TOKEN:-""}
  # - CMA_ENABLE_TELEGRAM_NOTIFICATION=${CMA_ENABLE_TELEGRAM_NOTIFICATION:-""}
  # - CMA_TELEGRAM_ENCODED_BOT_TOKEN=${CMA_TELEGRAM_ENCODED_BOT_TOKEN:-""}
  # - CMA_TELEGRAM_CHAT_ID=${CMA_TELEGRAM_CHAT_ID:-""}
  # - CMA_MONITOR_RADARR=${CMA_MONITOR_RADARR:-""}
  # - CMA_RADARR_URL=${CMA_RADARR_URL:-""}
  # - CMA_RADARR_ENCODED_API_KEY=${CMA_RADARR_ENCODED_API_KEY:-""}
  # - CMA_RADARR_ENABLE_NOTIFICATION=${CMA_RADARR_ENABLE_NOTIFICATION:-""}

volumes:
  torrent-downloads:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/opt/media-server/downloads"
  radarr-config:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/opt/media-server/config/radarr"
  sonarr-config:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/opt/media-server/config/sonarr"
  bazarr-config:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/opt/media-server/config/bazarr"
  prowlarr-config:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/opt/media-server/config/prowlarr"
  jellyfin-config:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/opt/media-server/config/jellyfin"
  qbittorrent-config:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/opt/media-server/config/qbittorrent"
  # cleanmyarr-config:

networks:
  mynetwork:
    external: true
